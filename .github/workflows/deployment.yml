name: CI/CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Test API
        run: npm test
        env:
          PORT: 5000
          NODE_ENV: test
          SG_API_KEY: ${{ secrets.SG_API_KEY }}
          CLIENT_URL: http://localhost:3000

  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Yandex Cloud Login
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_CREDENTIALS }}

      - name: Build and push image to YC Container Registry
        env:
          CR_REGISTRY: crpp03f6usl9mqb6qlj8
          IMAGE_NAME: api
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$IMAGE_NAME .
          docker push cr.yandex/$CR_REGISTRY/$IMAGE_NAME
